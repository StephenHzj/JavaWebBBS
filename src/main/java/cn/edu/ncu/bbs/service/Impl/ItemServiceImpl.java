package cn.edu.ncu.bbs.service.Impl;

import cn.edu.ncu.bbs.domain.Item;
import cn.edu.ncu.bbs.domain.ItemExample;
import cn.edu.ncu.bbs.mapper.ItemMapper;
import cn.edu.ncu.bbs.service.ItemService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;


@Service
public class ItemServiceImpl implements ItemService
{
    @Autowired
    private ItemMapper itemMapper;

    public void insert(String name, String description, String manager)
    {
        Item item = new Item();
        item.setItemName(name);
        item.setItemDescription(description);
        String base64 = "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";
        item.setItemIcon(base64);
        if(!manager.equals(""))
            item.setManager(Integer.valueOf(manager));
        itemMapper.insert(item);
    }

    public List<Item> findAll()
    {
        ItemExample itemExample = new ItemExample();
        return itemMapper.selectByExample(itemExample);
    }

    public Item selectByPrimaryKey(String itemId)
    {
        return itemMapper.selectByPrimaryKey(Integer.valueOf(itemId));
    }

    public int updateByPrimaryKey(String id, String name, String description, String manager)
    {
        Item item = new Item();
        ItemExample itemExample = new ItemExample();
        ItemExample.Criteria criteria = itemExample.createCriteria();
        criteria.andItemIdEqualTo(Integer.valueOf(id));
        if(!name.equals(""))
            item.setItemName(name);
        if(!description.equals(""))
            item.setItemDescription(description);
        if(!manager.equals(""))
            item.setManager(Integer.valueOf(manager));
        return itemMapper.updateByExampleSelective(item, itemExample);
    }

    public int deleteByPrimaryKey(String itemId)
    {
        return itemMapper.deleteByPrimaryKey(Integer.valueOf(itemId));
    }

    public void setIconPath(String id, String base64)
    {
        Item item = new Item();
        item.setItemIcon(base64);
        ItemExample itemExample = new ItemExample();
        ItemExample.Criteria criteria = itemExample.createCriteria();
        criteria.andItemIdEqualTo(Integer.valueOf(id));
        itemMapper.updateByExampleSelective(item, itemExample);
    }

//    public int getManagerIdByItemId(String itemId)
//    {
//        return itemMapper.getManagerIdByItemId(Integer.valueOf(itemId));
//    }

    public void removePermissionByUserId(Integer id)
    {
        ItemExample itemExample = new ItemExample();
        ItemExample.Criteria criteria = itemExample.createCriteria();
        criteria.andManagerEqualTo(id);
        Item item = new Item();
        item.setManager(3);
        itemMapper.updateByExampleSelective(item,itemExample);
    }
}
